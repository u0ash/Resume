{"version":3,"sources":["components/ParticleEffect.js","components/Fullpage.js","components/ScrollIcon.js","sections/TitleSection.js","sections/AboutSection.js","components/SkillCard.js","sections/SkillSection.js","components/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["ParticleEffect","params","background","color","particles","value","this","props","particleColor","number","density","enable","size","random","move","direction","out_mode","line_linked","interactivity","events","onclick","mode","modes","remove","particles_nb","Component","Fullpage","children","className","ScrollIcon","src","icon","alt","TitleSection","themeName","Name","name","data","title","subtitle","Object","keys","links","map","key","url","activeClass","to","spy","smooth","offset","duration","onSetActive","handleSetActive","icons","down","AboutSection","sections","items","item","content","SkillCard","skill","image","SkillSection","up","Navigation","state","currentTheme","current","themes","length","setState","parentCallback","scroller","scrollTo","delay","onClick","changeColorTheme","scrollToAbout","scrollTSkill","App","changeThemeCallback","childTheme","theme","changeTheme","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.85794500.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Particles } from \"react-particles-js\";\r\n\r\nimport \"./ParticleEffect.css\"\r\n\r\n\r\nexport default class ParticleEffect extends Component {\r\n  render (){\r\n    return (\r\n        <Particles\r\n        params={{\r\n          background: {\r\n            color: \"transparent\"\r\n          },\r\n          particles: {\r\n            color: {\r\n              value: this.props.particleColor,\r\n            },\r\n            number: {\r\n              value: 160,\r\n              density: {\r\n                enable: false,\r\n              },\r\n            },\r\n            size: {\r\n              value: 3,\r\n              random: true,\r\n            },\r\n            move: {\r\n              direction: \"bottom\",\r\n              out_mode: \"out\",\r\n            },\r\n            line_linked: {\r\n              enable: false,\r\n            },\r\n          },\r\n          interactivity: {\r\n            events: {\r\n              onclick: {\r\n                enable: true,\r\n                mode: \"remove\",\r\n              },\r\n            },\r\n            modes: {\r\n              remove: {\r\n                particles_nb: 10,\r\n              },\r\n            },\r\n          },\r\n        }}\r\n      />\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ParticleEffect from \"./ParticleEffect\";\r\nimport \"./Fullpage.css\";\r\n\r\nexport default class Fullpage extends Component {\r\n  render() {\r\n    const { children } = this.props;\r\n    return (\r\n      <div>\r\n        <div className={`fullpage ${this.props.className} || \"\"`}>\r\n          <div className=\"content-container\">{children}</div>\r\n          <div className=\"particles-container \">\r\n            <ParticleEffect particleColor={this.props.particleColor} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./ScrollIcon.css\";\r\n\r\nlet ScrollIcon = (props) => {\r\n  return (\r\n    <div className=\"icon-wrapper\">\r\n      <img className=\"down-icon\" src={props.icon} alt=\"\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScrollIcon;\r\n\r\n","import React, { Component } from \"react\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport ScrollIcon from \"../components/ScrollIcon\";\r\nimport data from \"../data.json\";\r\nimport { SocialIcon } from \"react-social-icons\";\r\nimport { Link, Element } from \"react-scroll\";\r\nimport \"./TitleSection.css\";\r\n\r\nexport default class TitleSection extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Fullpage\r\n          className={`first ${this.props.themeName.Name} || \"\"`}\r\n          particleColor={this.props.themeName.particleColor}\r\n        >\r\n          <Element name=\"title-element\" className=\"element\"></Element>\r\n          <h1 className=\"title\">{data.title}</h1>\r\n          <h2 className=\"subtitle\">{data.subtitle}</h2>\r\n          <div className=\"social-icons-wrapper\">\r\n            {Object.keys(data.links).map((key) => {\r\n              return (\r\n                <div className=\"icon\">\r\n                  <SocialIcon url={data.links[key]} />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <Link\r\n            activeClass=\"active\"\r\n            to=\"about-element\"\r\n            spy={true}\r\n            smooth={true}\r\n            offset={0}\r\n            duration={800}\r\n            onSetActive={this.handleSetActive}\r\n          >\r\n            <ScrollIcon icon={data.icons.down} />\r\n          </Link>\r\n        </Fullpage>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport data from \"../data.json\";\r\nimport { Link, Element } from \"react-scroll\";\r\nimport ScrollIcon from \"../components/ScrollIcon\";\r\nimport \"./AboutSection.css\";\r\n\r\nexport default class AboutSection extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Fullpage\r\n          className={`second ${this.props.themeName.Name} || \"\"`}\r\n          particleColor={this.props.themeName.particleColor}\r\n        >\r\n          <Element name=\"about-element\" className=\"element\"></Element>\r\n          <h3 className=\"about-title\">{data.sections[0].title}</h3>\r\n          <div className=\"about-content\">\r\n            {data.sections[0].items.map((item) => {\r\n              return <div>{item.content}</div>;\r\n            })}\r\n          </div>\r\n          <Link\r\n            activeClass=\"active\"\r\n            to=\"skill-element\"\r\n            spy={true}\r\n            smooth={true}\r\n            offset={0}\r\n            duration={800}\r\n            onSetActive={this.handleSetActive}\r\n          >\r\n            <ScrollIcon icon={data.icons.down} />\r\n          </Link>\r\n        </Fullpage>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {}\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./SkillCard.css\";\r\n\r\nexport default class SkillCard extends Component {\r\n  render() {\r\n    const { skill } = this.props;\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"image-wrapper\">\r\n          <img src={skill.content.image} alt={skill.content.title} />\r\n        </div>\r\n        <div className=\"skill-title-wrapper\">\r\n          <h4>{skill.content.title}</h4>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport data from \"../data.json\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport SkillCard from \"../components/SkillCard\";\r\nimport { Link, Element } from \"react-scroll\";\r\nimport ScrollIcon from \"../components/ScrollIcon\";\r\nimport \"./SkillSection.css\";\r\n\r\nexport default class SkillSection extends Component {\r\n  render() {\r\n    return (\r\n      <Fullpage\r\n        className={`third ${this.props.themeName.Name} || \"\"`}\r\n        particleColor={this.props.themeName.particleColor}\r\n      >\r\n        <Element name=\"skill-element\" className=\"element\"></Element>\r\n        <h3 className=\"skill-title\">{data.sections[1].title}</h3>\r\n        <div className=\"card-wrapper\">\r\n          {data.sections[1].items.map((skill) => {\r\n            return <SkillCard skill={skill} />;\r\n          })}\r\n        </div>\r\n        <Link\r\n          activeClass=\"active\"\r\n          to=\"title-element\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={0}\r\n          duration={800}\r\n          onSetActive={this.handleSetActive}\r\n        >\r\n          <ScrollIcon icon={data.icons.up} />\r\n        </Link>\r\n      </Fullpage>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { scroller } from \"react-scroll\";\r\nimport \"./Navigation.css\";\r\nimport data from \"../data.json\";\r\n\r\nexport default class Navigation extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      currentTheme: 1,\r\n    };\r\n  }\r\n\r\n  changeColorTheme() {\r\n    debugger;\r\n    let current = this.state.currentTheme;\r\n    current = current === data.themes.length - 1 ? 0 : ++current;\r\n    this.setState({\r\n      currentTheme: current,\r\n    });\r\n    this.props.parentCallback(data.themes[this.state.currentTheme]);\r\n  }\r\n\r\n  scrollToAbout() {\r\n    scroller.scrollTo(\"about-element\", {\r\n      duration: 800,\r\n      delay: 0,\r\n      smooth: \"easeInOutQuart\",\r\n    });\r\n  }\r\n\r\n  scrollTSkill() {\r\n    scroller.scrollTo(\"skill-element\", {\r\n      duration: 800,\r\n      delay: 0,\r\n      smooth: \"easeInOutQuart\",\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"navigation-wrapper\">\r\n        <div\r\n          className=\"change-theme\"\r\n          onClick={() => {\r\n            this.changeColorTheme();\r\n          }}\r\n        >\r\n          <img src={this.props.icon} alt=\"\" />\r\n          <span>Color Me</span>\r\n        </div>\r\n\r\n        <span onClick={this.scrollToAbout} className=\"section-link\">\r\n          About\r\n        </span>\r\n        <span onClick={this.scrollTSkill} className=\"section-link\">\r\n          Skills\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport TitleSection from \"./sections/TitleSection\";\nimport AboutSection from \"./sections/AboutSection\";\nimport SkillSection from \"./sections/SkillSection\";\nimport Navigation from \"./components/Navigation\";\nimport data from \"./data.json\";\nimport Snowfall from \"react-snowfall\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      theme: \"\",\n    };\n  }\n  changeThemeCallback = (childTheme) => {\n    this.setState({\n      theme: childTheme,\n    });\n  };\n\n  componentWillMount(){\n    this.setState({\n      theme: data.themes[0],\n    });\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navigation \n          parentCallback={this.changeThemeCallback}\n          icon={data.icons.changeTheme}\n        />\n        <TitleSection themeName={this.state.theme}/>\n        <AboutSection themeName={this.state.theme}/>\n        <SkillSection themeName={this.state.theme}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,     \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}